<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gsmservice\Gateway;

/**
 * ClientBuilder is used to configure and build an instance of the SDK.
 */
class ClientBuilder
{
    public function __construct(
        private SDKConfiguration $sdkConfig = new SDKConfiguration(),
    ) {
    }

    /**
     * setClient allows setting a custom Guzzle client for the SDK to make requests with.
     *
     * @param  \GuzzleHttp\ClientInterface  $client
     * @return ClientBuilder
     */
    public function setClient(\GuzzleHttp\ClientInterface $client): ClientBuilder
    {
        $this->sdkConfig->defaultClient = $client;

        return $this;
    }

    /**
     * setSecurity is used to configure the security required for the SDK.
     *
     * @param  string  $bearer
     * @return ClientBuilder
     */
    public function setSecurity(string $bearer): ClientBuilder
    {
        $security = new Models\Components\Security(
            bearer: $bearer
        );
        $this->sdkConfig->security = $security;

        return $this;
    }

    /**
     * setSecuritySource is usd to configure the security required for the SDK.
     * unlike setSecurity, setSecuritySource accepts a closure that will be called to retrieve the security information.
     *
     * @param  pure-Closure(): string  $securitySource
     * @return ClientBuilder
     */
    public function setSecuritySource(\Closure $securitySource): ClientBuilder
    {
        $this->sdkConfig->securitySource = $securitySource;

        return $this;
    }

    /**
     * setServerUrl is used to configure the server URL for the SDK, and optionally template any parameters in the URL.
     *
     * @param  string  $serverUrl
     * @param  array<string, string>  $params
     * @return ClientBuilder
     */
    public function setServerUrl(string $serverUrl, ?array $params = null): ClientBuilder
    {
        $this->sdkConfig->serverUrl = Utils\Utils::templateUrl($serverUrl, $params);

        return $this;
    }

    /**
     * setServer is used to configure the server for the SDK
     *
     * @param  string  $server
     * @return ClientBuilder
     */
    public function setServer(string $server): ClientBuilder
    {
        $this->sdkConfig->server = $server;

        return $this;
    }

    /**
     * build is used to build the SDK with any of the configured options.
     *
     * @return Client
     */
    public function build(): Client
    {
        if ($this->sdkConfig->defaultClient === null) {
            $this->sdkConfig->defaultClient = new \GuzzleHttp\Client([
                'timeout' => 60,
            ]);
        }
        if ($this->sdkConfig->hasSecurity()) {
            $this->sdkConfig->securityClient = Utils\Utils::configureSecurityClient($this->sdkConfig->defaultClient, $this->sdkConfig->getSecurity());
        }
        if ($this->sdkConfig->securityClient === null) {
            $this->sdkConfig->securityClient = $this->sdkConfig->defaultClient;
        }

        return new Client($this->sdkConfig);
    }
}