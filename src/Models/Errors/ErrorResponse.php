<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gsmservice\Gateway\Models\Errors;



/** ErrorResponse - An object that complies with RFC 9457 containing information about a request error */
class ErrorResponse
{
    /**
     * A URI reference that identifies the problem type
     *
     * @var ?string $type
     */
    #[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $type = null;

    /**
     * The HTTP status code generated by the origin server for this occurrence of the problem
     *
     * @var ?int $status
     */
    #[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $status = null;

    /**
     * A short, human-readable summary of the problem type
     *
     * @var ?string $title
     */
    #[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $title = null;

    /**
     * A human-readable explanation specific to this occurrence of the problem
     *
     * @var ?string $detail
     */
    #[\JMS\Serializer\Annotation\SerializedName('detail')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $detail = null;

    /**
     * An API specific error code aiding the provider team understand the error based on their own potential taxonomy or registry
     *
     * @var ?string $code
     */
    #[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $code = null;

    /**
     * A URI reference that identifies the specific occurrence of the problem
     *
     * @var ?string $instance
     */
    #[\JMS\Serializer\Annotation\SerializedName('instance')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $instance = null;

    /**
     * @param  ?string  $type
     * @param  ?int  $status
     * @param  ?string  $title
     * @param  ?string  $detail
     * @param  ?string  $code
     * @param  ?string  $instance
     */
    public function __construct(?string $type = null, ?int $status = null, ?string $title = null, ?string $detail = null, ?string $code = null, ?string $instance = null)
    {
        $this->type = $type;
        $this->status = $status;
        $this->title = $title;
        $this->detail = $detail;
        $this->code = $code;
        $this->instance = $instance;
    }

    public function toException(): ErrorResponseThrowable
    {
        if ($this->detail !== null) {
            $message = $this->detail;
        } else {
            $message = 'unknown error';
        }
        if ($this->code !== null) {
            $code = $this->code;
        } else {
            $code = -1;
        }

        return new ErrorResponseThrowable($message, (int) $code, $this);
    }
}