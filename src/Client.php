<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Gsmservice\Gateway;



/**
 * Client - Messaging Gateway GSMService.pl: Client class is used to initialize SDK environment.
 *
 *
 * Please initialize it this way:
 *
 * ```
 * use Gsmservice\Gateway;
 *
 * $security = '<YOUR API ACCESS TOKEN>';
 * $sdk = Gateway\Client::builder()->setSecurity($security)->build();
 * ```
 *
 * If you want to use a Sandbox test system please initialize it as follows:
 *
 * ```
 * $sdk = Gateway\Client::builder()->setServer(Gateway\Client::SERVER_SANDBOX)->setSecurity($security)->build();
 * ```
 */
class Client
{
    /** SERVER_PROD - Production system */
    public const SERVER_PROD = 'prod';

    /** SERVER_SANDBOX - Test system (SANDBOX) */
    public const SERVER_SANDBOX = 'sandbox';

    public const SERVERS = [
        /** Production system */
        Client::SERVER_PROD => 'https://api.gsmservice.pl/rest',
        /** Test system (SANDBOX) */
        Client::SERVER_SANDBOX => 'https://api.gsmservice.pl/rest-sandbox',
    ];

    public Accounts $accounts;

    public Outgoing $outgoing;

    public Incoming $incoming;

    public Common $common;

    public Senders $senders;

    /**
     * Returns a new instance of the SDK builder used to configure and create the SDK instance.
     *
     * @return ClientBuilder
     */
    public static function builder(): ClientBuilder
    {
        return new ClientBuilder();
    }

    /**
     * @param  SDKConfiguration  $sdkConfiguration
     */
    public function __construct(
        private SDKConfiguration $sdkConfiguration,
    ) {
        $this->accounts = new Accounts($this->sdkConfiguration);
        $this->outgoing = new Outgoing($this->sdkConfiguration);
        $this->incoming = new Incoming($this->sdkConfiguration);
        $this->common = new Common($this->sdkConfiguration);
        $this->senders = new Senders($this->sdkConfiguration);
    }
}